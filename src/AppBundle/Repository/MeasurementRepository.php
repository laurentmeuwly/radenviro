<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Nuclide;
use AppBundle\Entity\Station;
use AppBundle\Entity\Result;
use AppBundle\Entity\Sample;

/**
 * MeasurementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MeasurementRepository extends \Doctrine\ORM\EntityRepository
{
	public function getAllByStationAndNuclide($station, $nuclide)
	{
		/*if ($id > 0) {
			return $this
			->createQueryBuilder('c')
			->where('c.parent IS NULL AND c.id !='.$id)
			->orderBy('c.name', 'ASC')
			;
		} else {
			return $this
			->createQueryBuilder('c')
			->where('c.parent IS NULL')
			->orderBy('c.name', 'ASC')
			;
		}*/
		$sql = 'SELECT  measurement.referenceDate, result.value, station.code
FROM sample, measurement, result, station
WHERE sample.station_id=4
AND result.nuclide_id=21
AND result.measurement_id=measurement.id
AND measurement.sample_id=sample.id
AND sample.station_id=station.id
ORDER BY measurement.referenceDate DESC';
		
		$conn = $this->getEntityManager()
		->getConnection();
		$sql = '
            SELECT  measurement.referenceDate, result.value, station.code
FROM sample, measurement, result, station
WHERE sample.station_id= :station
AND result.nuclide_id= :nuclide
AND result.measurement_id=measurement.id
AND measurement.sample_id=sample.id
AND sample.station_id=station.id
ORDER BY measurement.referenceDate DESC
            ';
		$stmt = $conn->prepare($sql);
		$stmt->execute(array('station' => $station->getId(), 'nuclide' => $nuclide->getId()));
		//var_dump($stmt->fetchAll());die;
		return $stmt->fetch();
		
		//return $this->createQueryBuilder('c')->where()->orderBy('c.referenceDate', 'DESC');
	}
}